[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Canseza Avağ Erdurak",
    "section": "",
    "text": "This progress journal covers Canseza Avağ Erdurak’s work during their term at BDA 503 Fall 2022.\nEach section is an assignment or an individual work."
  },
  {
    "objectID": "assignment1.html#tidyverse",
    "href": "assignment1.html#tidyverse",
    "title": "1  Assignment 1",
    "section": "4.1 Tidyverse",
    "text": "4.1 Tidyverse\nWhen I started to watch conference talk that I mentioned above, I realized I could do anything related to data wrangling I did so far in Pegasus by using R. So, I decided to elaborate on this article. Tidyverse has 8 core packages named ggplot2, dplyr, tidyr, readr, purrr, tibble, stringr and forcats.\n\nData Visualization and Exploration\n\n\nggplot2 is used to create data visualizations like bar charts, pie charts, histograms, scatterplots, error charts, etc.\n\n\nData Wrangling and Transformation\n\n\nDplyr is known for data manipulation. It has five important functions namely mutate(), select(), filter(), summarise() and arrange(). These functions are used with group_by().\nTidyr helps create clean data.\nStringr has many functions for data cleaning and data preparation. All functions in this library starts with “str” and take a string vector as a first argument.\nForcats handles issues like changes the orders of values in vectors, reordering the vectors, etc.\n\n\nData Import and Management\n\n\nReadr helps read rectangular data such as that with file formats tsv, csv, delim, fwf, etc. in a simple and speedy way.\nTibble is a form of a data.frame which includes the useful parts of it and discards the parts that are not so important.\n\n\nFunctional Programming\n\n\nPurrr turns messed-up codes into simpler ones.\n\nArticle : https://www.geeksforgeeks.org/what-are-the-tidyverse-packages-in-r-language/"
  },
  {
    "objectID": "assignment1.html#uncover-the-r-applications",
    "href": "assignment1.html#uncover-the-r-applications",
    "title": "1  Assignment 1",
    "section": "4.2 Uncover the R Applications",
    "text": "4.2 Uncover the R Applications\nI watched many conference talks so that I could chose one for this assignment. These talks make me wonder why R Programming Language is used by top companies from various industries like banking, e-commerce, finance, etc.\nApplications of R Programming :\n\nFinance : R helps financial institutions perform downside risk measurement, adjust risk performance and utilize visualizations like candlestick charts, density plots, drawdown plots, etc. Time-series statistical processes of R are used to model the movement of financial industries’ stock-market and predict the prices of shares. R provides financial data mining capabilities through its packages like quantmod, pdfetch, TFX, pwt, etc. Rshiny helps extract data from online assets.\nBanking : R is most widely used for credit risk modeling and other forms of risk analytics. Hadoop is an ally of R in the fields like analysis of customer quality, customer segmentation, and retention.\nHealthcare : R helps perform pre-clinical trials and analyze the drug-safety data. R is also used for statistical modeling in the field of epidemiology, where data scientists analyze and predict the spread of diseases.\nSocial Media : Some of the important statistical tools like sentiment analysis and other forms of social media data mining are used with R. Social media is used for potential customer segmentation and targeting them as new customers.\nE-commerce : E-commerce companies use R is for analyzing cross-selling products to their customers. Various statistical procedures like linear modeling are necessary to analyze the purchases made by the customers as well as in predicting product sales. Furthermore, companies use R for carrying out A/B testing analysis across the pages of their products.\nManufacturing : Analyzing customer sentiment helps them optimize their product according to trending consumer interests and also to match their production volume to varying market demand. They also use R to minimize their production costs and maximize profits.\n\nArticle : https://data-flair.training/blogs/r-applications/"
  },
  {
    "objectID": "assignment1.html#k-fold-cross-validation-in-r-step-by-step",
    "href": "assignment1.html#k-fold-cross-validation-in-r-step-by-step",
    "title": "1  Assignment 1",
    "section": "4.3 K-Fold Cross Validation in R (Step-by-Step)",
    "text": "4.3 K-Fold Cross Validation in R (Step-by-Step)\nIn AI projects, a few models are run to figure out which one is the best for prediction.\nK-fold cross validation is widely used method for model verification.\nFollowing dataset is created.\n\n#create data frame\ndf <- data.frame(y=c(6, 8, 12, 14, 14, 15, 17, 22, 24, 23),\n                 x1=c(2, 5, 4, 3, 4, 6, 7, 5, 8, 9),\n                 x2=c(14, 12, 12, 13, 7, 8, 7, 4, 6, 5))\n\n#view data frame\ndf\n##     y x1 x2\n## 1   6  2 14\n## 2   8  5 12\n## 3  12  4 12\n## 4  14  3 13\n## 5  14  4  7\n## 6  15  6  8\n## 7  17  7  7\n## 8  22  5  4\n## 9  24  8  6\n## 10 23  9  5\n\nMultiple linear regression model is fit to the dataset. k-fold cross validation with k=5 is performed to evaluate the model performance.\nThe 3 metrics, RMSE, R-squared, and MAE are used to decide which model is the best.\n\nRMSE : the average difference between the predictions made by the model and the actual observations.\nRsquared : the correlation between the predictions made by the model and the actual observations.\nMAE : the average absolute difference between the predictions made by the model and the actual observations.\n\n\nlibrary(caret)\n## Zorunlu paket yükleniyor: ggplot2\n## Zorunlu paket yükleniyor: lattice\n\n#specify the cross-validation method\nctrl <- trainControl(method = \"cv\", number = 5)\n\n#fit a regression model and use k-fold CV to evaluate performance\nmodel <- train(y ~ x1 + x2, data = df, method = \"lm\", trControl = ctrl)\n\n#view summary of k-fold CV               \nprint(model)\n## Linear Regression \n## \n## 10 samples\n##  2 predictor\n## \n## No pre-processing\n## Resampling: Cross-Validated (5 fold) \n## Summary of sample sizes: 8, 8, 8, 8, 8 \n## Resampling results:\n## \n##   RMSE      Rsquared  MAE     \n##   3.950684  1         3.656269\n## \n## Tuning parameter 'intercept' was held constant at a value of TRUE\n\nThe final model formula is :\ny = 21.2672 + 0.7803*(x1) – 1.12538(x2)\n\n#view final model\nmodel$finalModel\n## \n## Call:\n## lm(formula = .outcome ~ ., data = dat)\n## \n## Coefficients:\n## (Intercept)           x1           x2  \n##     21.2672       0.7803      -1.1253\n\nThe following code displays the model predictions made for each fold :\n\n#view predictions for each fold\nmodel$resample\n##       RMSE Rsquared      MAE Resample\n## 1 3.573658        1 3.457940    Fold1\n## 2 1.551268        1 1.107723    Fold2\n## 3 6.281255        1 6.280702    Fold3\n## 4 3.378353        1 3.040388    Fold4\n## 5 4.968888        1 4.394595    Fold5\n\nArticle : https://www.statology.org/k-fold-cross-validation-in-r/"
  }
]